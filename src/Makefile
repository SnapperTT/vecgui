.DEFAULT_GOAL := all

# make with STTR with make USE_STTR=ON or make sttr
USE_STTR=

LAZY=../../lzz-bin/lzz -hx hh
RAWSOURCES=example.lzz vgui_multilinetext.lzz vgui_context.lzz vgui_skin.lzz nanovg_vgui_context.lzz vgui_elements.lzz vgui_stringfunctions.lzz sdl_vgui_context.lzz vgui_generators.lzz vgui_widget.lzz vgui.lzz
# Files are combined into single header
SINGLEHEADER_SRC=vgui.h2 vgui_skin.h2 vgui_context.h2 vgui_widget.h2 vgui_elements.h2 vgui_multilinetext.h2 vgui_stringfunctions.h2
SINGLEHEADER_OUT=vgui.h
# Files that are discrete files 
EXTRAHEADER_H=nanovg_vgui_context.h2 sdl_vgui_context.h2
EXTRAHEADER_CPP=example.h2 
OUTPUTDIR=../
OUTPUTDIR_STTR=../vgui_sttr/
TEMPDIR=temp/
TEMPDIR_STTR=temp_sttr/
STTR_FLAG=
ifeq ($(USE_STTR),ON)
	OUTPUTDIR=$(OUTPUTDIR_STTR)
	TEMPDIR=$(TEMPDIR_STTR)
	STTR_FLAG=-DSTTR_ENABLED=1
endif
SOURCES=$(addprefix $(TEMPDIR), $(RAWSOURCES:.lzz=.cpp))
SFI=$(addprefix $(OUTPUTDIR), $(RAWSOURCES:.lzz=.h))
OSINGLEHEADER_OUT=$(OUTPUTDIR)$(SINGLEHEADER_OUT)
OEXTRAHEADER_OUT=$(addprefix $(OUTPUTDIR), $(EXTRAHEADER_H:.h2=.h)) $(addprefix $(OUTPUTDIR), $(EXTRAHEADER_CPP:.h2=.cpp))

########################################################################
# Phoney Rules
.PHONY: all
all:
	$(MAKE) all_base
	$(MAKE) USE_STTR=ON all_base

.PHONY: all_base
all_base: $(OSINGLEHEADER_OUT) $(OEXTRAHEADER_OUT) $(OUTPUTDIR)
	@cp -f vgui_constants.hpp $(OUTPUTDIR)/vgui_constants.hpp
	@echo Done

.PHONY: sttr
sttr:
	$(MAKE) USE_STTR=ON all_base

.PHONY: clean
clean:
	rm -rf $(TEMPDIR)*
	rm -rf $(TEMPDIR_STTR)*
	
.PHONY: nuke
nuke: clean
	rm -rf $(OUTPUTDIR)/*.h $(OUTPUTDIR)/*.cpp
	rm -rf $(OUTPUTDIR_STTR)/*.h $(OUTPUTDIR_STTR)/*.cpp 

########################################################################
$(OUTPUTDIR):
	@mkdir -p $(OUTPUTDIR)

$(TEMPDIR)%.cpp $(TEMPDIR)%.hh: %.lzz $(SUBSOURCES)
	@mkdir -p $(TEMPDIR)$(dir $<)
	$(LAZY) $(STTR_FLAG) -o $(TEMPDIR)$(dir $<) $<

$(OSINGLEHEADER_OUT): $(addprefix $(TEMPDIR), $(SINGLEHEADER_SRC)) $(OUTPUTDIR)
	cat $(addprefix $(TEMPDIR), $(SINGLEHEADER_SRC)) > $(OSINGLEHEADER_OUT)

$(OUTPUTDIR)%.h: $(TEMPDIR)%.h2 $(OUTPUTDIR)
	mv -f $< $@
	
$(OUTPUTDIR)%.cpp: $(TEMPDIR)%.h2 $(OUTPUTDIR)
	mv -f $< $@
	
########################################################################
# Concatenate the .cpp and .hh files into a single header
# and enable the VECGUI_IMPL macro
# then remove any instance of #include "filename.hh" that
# lzz has added
$(TEMPDIR)%.h2: $(TEMPDIR)%.cpp $(TEMPDIR)%.hh
	echo '// This file is autogenerated. See look at the .lzz files in the src/ directory for a more human-friendly version' > $@
	cat $(TEMPDIR)$*.hh >> $@
	echo '' >> $@
	echo '////////////////////////////////////////////////////////////////////////' >> $@
	echo '' >> $@
	echo '#ifdef VECGUI_IMPL' >> $@
	echo '#ifndef VECGUI_IMPL_DOUBLE_GUARD_$(subst /,_,$(subst \\,_,$*))' >> $@
	echo '#define VECGUI_IMPL_DOUBLE_GUARD_$(subst /,_,$(subst \\,_,$*))' >> $@
	cat $(TEMPDIR)$*.cpp >> $@
	echo '#endif //VECGUI_IMPL_DOUBLE_GUARD_$(subst /,_,$(subst \\,_,$*))' >> $@
	echo '#endif //VECGUI_IMPL_IMPL' >> $@
	sed -i '/#include ".*\.hh"/d' $@ 
	sed -i -e "s/__NOEXCEPT)/) noexcept/g" $@
	sed -i -e "s/__NOEXCEPTDEFAULT)/) noexcept = default/g" $@
